{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "5f67660c",
   "metadata": {},
   "outputs": [],
   "source": [
    "#abcde -> AbCdE"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "c4dd8f86",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "enter any string abcde\n",
      "AbCdE\n"
     ]
    }
   ],
   "source": [
    "x=input('enter any string ')\n",
    "i=0\n",
    "k=''\n",
    "while i<len(x):\n",
    "    if i%2==0:\n",
    "        k=k+(x[i].upper())\n",
    "        \n",
    "    else:\n",
    "        k=k+(x[i])\n",
    "       \n",
    "    i=i+1\n",
    "print(k)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "50bf4308",
   "metadata": {},
   "outputs": [],
   "source": [
    "#l=['a',1.2,'abcd',1+2j] -> print type() each element\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "29de038a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'str'>\n",
      "<class 'float'>\n",
      "<class 'str'>\n",
      "<class 'complex'>\n"
     ]
    }
   ],
   "source": [
    "l=['a',1.2,'abcd',1+2j]\n",
    "i=0\n",
    "while i<len(l):\n",
    "    print(type(l[i]))\n",
    "    i=i+1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "3950e0ca",
   "metadata": {},
   "outputs": [],
   "source": [
    "#x=['a','b',3,'g',5]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "f6eaa9c3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "abg\n",
      "8\n"
     ]
    }
   ],
   "source": [
    "x=['a','b','3','g','5']\n",
    "i=0\n",
    "k=''\n",
    "c=0\n",
    "while i<len(x):\n",
    "    if x[i].isalpha():\n",
    "        k=k+x[i]\n",
    "    else:\n",
    "        c=c+int(x[i])\n",
    "    i=i+1\n",
    "print(k)\n",
    "print(c)\n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "bf18f4f2",
   "metadata": {},
   "outputs": [],
   "source": [
    "#x='abcdef234j'-> [abcdefj] [234]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "cca1eadf",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "enter stringsdfgh3456fghj\n",
      "['s', 'd', 'f', 'g', 'h', 'f', 'g', 'h', 'j']\n",
      "['3', '4', '5', '6']\n"
     ]
    }
   ],
   "source": [
    "m=input('enter string')\n",
    "x=list(m)\n",
    "i=0\n",
    "k=[]\n",
    "l=[]\n",
    "while i<len(x):\n",
    "    if x[i].isalpha():\n",
    "        k.append(x[i])\n",
    "    else:\n",
    "        l.append(x[i])\n",
    "    i=i+1\n",
    "print(k)\n",
    "print(l)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "2ccb6d77",
   "metadata": {},
   "outputs": [],
   "source": [
    "# x=['a',6,'b','c'] y=['a',7,8,'b','d','e'] -> print the uniq elements[6,7,8,'c','e','d']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "9d1fa81a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['6', 'b', 'c', '7', '8', 'e']\n"
     ]
    }
   ],
   "source": [
    "x=['a',\"6\",'b','c']\n",
    "y=['a',\"7\",\"8\",'e'] \n",
    "i=0\n",
    "k=[]\n",
    "g=0\n",
    "while i<len(x):    \n",
    "    j=0\n",
    "    g=0\n",
    "    while j<len(y):\n",
    "        if x[i]!=y[j]:\n",
    "            g=g+1\n",
    "        if g==len(y):\n",
    "            k.append(x[i])\n",
    "        j=j+1\n",
    "    i=i+1\n",
    "i=0\n",
    "while i<len(y):    \n",
    "    j=0\n",
    "    g=0\n",
    "    while j<len(x):\n",
    "        if y[i]!=x[j]:\n",
    "            g=g+1\n",
    "        if g==len(x):\n",
    "            k.append(y[i])\n",
    "        j=j+1\n",
    "    i=i+1\n",
    "print(k)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "7d0da5a4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[]a,9,6,2,g\n",
      "[]a,1,7,3,u\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "['3', '9', '6', '2', '7', '1', 'u', 'g']"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x=input([])\n",
    "y=input([])\n",
    "a=set(x)\n",
    "b=set(y)\n",
    "c=a.difference(b)\n",
    "d=b.difference(a)\n",
    "c.update(d)\n",
    "k=list(c)\n",
    "k"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f3bc1f17",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
